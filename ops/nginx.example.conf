# Example Nginx reverse proxy for RekTrace RugScanner

user www-data;
worker_processes auto;
pid /run/nginx.pid;
events { worker_connections 1024; }

http {
  # Basic security headers
  map $http_origin $cors {
    default "";
  }

  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  types_hash_max_size 2048;

  # Rate limits
  limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

  # Upstream app (adjust port to HEALTH_PORT / app listen)
  upstream rektrace_app {
    server 127.0.0.1:8080;
    keepalive 32;
  }

  server {
    listen 443 ssl http2;
    server_name your.domain.tld;

    ssl_certificate     /etc/letsencrypt/live/your.domain.tld/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your.domain.tld/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # Clickjacking / MIME sniffing / referrer
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy no-referrer always;
    # CORS off by default; enable only if needed

    # Proxy common settings
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location = /healthz { proxy_pass http://rektrace_app/healthz; }
    location /status { limit_req zone=api burst=20 nodelay; proxy_pass http://rektrace_app/status; }
    location /metrics { proxy_pass http://rektrace_app/metrics; }

    location / {
      limit_req zone=api burst=20 nodelay;
      proxy_pass http://rektrace_app;
    }
  }

  server {
    listen 80;
    server_name your.domain.tld;
    return 301 https://$host$request_uri;
  }
}


